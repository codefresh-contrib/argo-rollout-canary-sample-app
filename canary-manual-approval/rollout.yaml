apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: golang-sample-app-deployment
spec:
  replicas: 4
  strategy:
    canary: 
      canaryService: rollout-canary-preview
      stableService: rollout-canary-active
      trafficRouting:
        smi: 
          trafficSplitName: rollout-example-traffic-split 
          rootService: rollout-canary-all-traffic 
      steps:
        - setWeight: 10
        - setCanaryScale:
            weight: 25
        - pause: {}
        - setWeight: 33
        - setCanaryScale:
            weight: 50
        - pause: {}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: golang-sample-app
  template:
    metadata:
      labels:
        app: golang-sample-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
        linkerd.io/inject: enabled  
    spec:
      containers:
      - name: golang-sample-app-container
        image: kostiscodefresh/argo-rollouts-canary-sample-app:{{CF_SHORT_REVISION}}        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP

